type Account @entity {
	id:                           ID!
	asGovernorAlpha:              GovernorAlpha
	compFor:                      [GovernorAlpha!]! @derivedFrom(field: "comp")
	timelockFor:                  [GovernorAlpha!]! @derivedFrom(field: "timelock")
	guardianFor:                  [GovernorAlpha!]! @derivedFrom(field: "guardian")
	proposals:                    [Proposal!]! @derivedFrom(field: "proposer")
	proposalcreated:              [ProposalCreated!]! @derivedFrom(field: "proposer")
	receipts:                     [Receipt!]! @derivedFrom(field: "voter")
	votecast:                     [VoteCast!]! @derivedFrom(field: "voter")
	targetedCalls:                [ProposalCall!]! @derivedFrom(field: "target")
}

type GovernorAlpha @entity {
	id:                           ID!
	name:                         String!
	comp:                         Account # optional ? â†’ missing/renames in some forks
	timelock:                     Account # optional ?
	guardian:                     Account # optional ?
	quorumVotes:                  BigInt!
	proposalThreshold:            BigInt!
	proposalMaxOperations:        BigInt!
	votingDelay:                  BigInt!
	votingPeriod:                 BigInt!
	proposals:                    [Proposal!]! @derivedFrom(field: "governoralpha")
	proposalcreated:              [ProposalCreated!]! @derivedFrom(field: "governoralpha")
	proposalqueued:               [ProposalQueued!]! @derivedFrom(field: "governoralpha")
	proposalexecuted:             [ProposalExecuted!]! @derivedFrom(field: "governoralpha")
	proposalcanceled:             [ProposalCanceled!]! @derivedFrom(field: "governoralpha")
	votecast:                     [VoteCast!]! @derivedFrom(field: "governoralpha")
}

type Proposal @entity {
	id:                           ID!
	governoralpha:                GovernorAlpha!
	proposalId:                   BigInt!
	proposer:                     Account!
	eta:                          BigInt
	startBlock:                   BigInt!
	endBlock:                     BigInt!
	forVotes:                     BigInt!
	againstVotes:                 BigInt!
	canceled:                     Boolean!
	executed:                     Boolean!
	description:                  String!
	calls:                        [ProposalCall!]! @derivedFrom(field: "proposal")
	receipts:                     [Receipt!]! @derivedFrom(field: "proposal")
	proposalcreated:              [ProposalCreated!]! @derivedFrom(field: "proposal")
	proposalqueued:               [ProposalQueued!]! @derivedFrom(field: "proposal")
	proposalexecuted:             [ProposalExecuted!]! @derivedFrom(field: "proposal")
	proposalcanceled:             [ProposalCanceled!]! @derivedFrom(field: "proposal")
	votecast:                     [VoteCast!]! @derivedFrom(field: "proposal")
}

type ProposalCall @entity {
	id:                           ID!
	proposal:                     Proposal!
	index:                        Int!
	target:                       Account!
	value:                        BigInt!
	signature:                    String!
	calldata:                     Bytes!
}

type Receipt @entity {
	id:                           ID!
	proposal:                     Proposal!
	voter:                        Account!
	support:                      Boolean!
	votes:                        BigInt!
}

type ProposalCreated implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governoralpha:                GovernorAlpha!
	proposal:                     Proposal!
	proposer:                     Account!
}

type ProposalQueued implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governoralpha:                GovernorAlpha!
	proposal:                     Proposal!
	eta:                          BigInt!
}

type ProposalExecuted implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governoralpha:                GovernorAlpha!
	proposal:                     Proposal!
}

type ProposalCanceled implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governoralpha:                GovernorAlpha!
	proposal:                     Proposal!
}

type VoteCast implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governoralpha:                GovernorAlpha!
	proposal:                     Proposal!
	receipt:                      Receipt!
	voter:                        Account!
}

type DecimalValue @entity {
	id:                           ID!
	value:                        BigDecimal!
	exact:                        BigInt!
	decimals:                     Int!
}

interface Event {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
}

type Transaction @entity {
	id:                           ID!
	timestamp:                    BigInt!
	blockNumber:                  BigInt!
	events:                       [Event!]! @derivedFrom(field: "transaction")
}

type PersistentStringArray @entity {
	id:                           ID!
	values:                       [String!]!
}

type PersistentString @entity {
	id:                           ID!
	value:                        String!
}
