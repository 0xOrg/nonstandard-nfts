type Account @entity {
	id:                           ID!

	asGovernor:                   Governor
	asToken:                      Token

	compFor:                      [Governor!]! @derivedFrom(field: "comp")
	timelockFor:                  [Governor!]! @derivedFrom(field: "timelock")
	guardianFor:                  [Governor!]! @derivedFrom(field: "guardian")
	adminFor:                     [Governor!]! @derivedFrom(field: "admin")
	pendingAdminFor:              [Governor!]! @derivedFrom(field: "pendingAdmin")
	implementationFor:            [Governor!]! @derivedFrom(field: "implementation")
	proposals:                    [Proposal!]! @derivedFrom(field: "proposer")
	targetedCalls:                [ProposalCall!]! @derivedFrom(field: "target")
	receipts:                     [Receipt!]! @derivedFrom(field: "voter")
	proposalcreated:              [ProposalCreated!]! @derivedFrom(field: "proposer")
	votecast:                     [VoteCast!]! @derivedFrom(field: "voter")

	balances:                     [Balance!]! @derivedFrom(field: "account")
	votes:                        [Votes!]! @derivedFrom(field: "account")
	delegationFrom:               [Delegation!]! @derivedFrom(field: "delegator")
	delegationTo:                 [Delegation!]! @derivedFrom(field: "delegate")
	transfersFrom:                [Transfer!]! @derivedFrom(field: "from")
	transfersTo:                  [Transfer!]! @derivedFrom(field: "to")
	approvalsOwner:               [Approval!]! @derivedFrom(field: "owner")
	approvalsSpender:             [Approval!]! @derivedFrom(field: "spender")

}

###############################################################################
#                                  Governor                                   #
###############################################################################
enum GovernorType {
	ALPHA
	BRAVO
}

type Governor @entity {
	id:                           ID!
	type:                         GovernorType!
	name:                         String # optional ? → missing in some forks
	comp:                         Account # optional ? → missing/renames in some forks
	timelock:                     Account # optional ?
	guardian:                     Account # part of GovernorAlpha
	admin:                        Account # part of GovernorBravo
	pendingAdmin:                 Account # part of GovernorBravo
	implementation:               Account # part of GovernorBravo
	quorumVotes:                  BigInt # optional ?
	proposalThreshold:            BigInt # optional ?
	proposalMaxOperations:        BigInt # optional ?
	votingDelay:                  BigInt # optional ?
	votingPeriod:                 BigInt # optional ?
	proposalCount:                Int!
	queuedProposalCount:          Int!
	executedProposalCount:        Int!
	canceledProposalCount:        Int!
	proposals:                    [Proposal!]! @derivedFrom(field: "governor")
	proposalcreated:              [ProposalCreated!]! @derivedFrom(field: "governor")
	proposalqueued:               [ProposalQueued!]! @derivedFrom(field: "governor")
	proposalexecuted:             [ProposalExecuted!]! @derivedFrom(field: "governor")
	proposalcanceled:             [ProposalCanceled!]! @derivedFrom(field: "governor")
	votecast:                     [VoteCast!]! @derivedFrom(field: "governor")
	newadmin:                     [NewAdmin!]! @derivedFrom(field: "governor")
	newpendingadmin:              [NewPendingAdmin!]! @derivedFrom(field: "governor")
	newimplementation:            [NewImplementation!]! @derivedFrom(field: "governor")
	proposalthresholdset:         [ProposalThresholdSet!]! @derivedFrom(field: "governor")
	votingdelayset:               [VotingDelaySet!]! @derivedFrom(field: "governor")
	votingperiodset:              [VotingPeriodSet!]! @derivedFrom(field: "governor")
}

type Proposal @entity {
	id:                           ID!
	governor:                     Governor!
	proposalId:                   BigInt!
	proposer:                     Account!
	eta:                          BigInt # not set until queue
	startBlock:                   BigInt # missing in some forks
	endBlock:                     BigInt # missing in some forks
	forVotes:                     DecimalValue!
	againstVotes:                 DecimalValue!
	abstainVotes:                 DecimalValue!
	canceled:                     Boolean!
	executed:                     Boolean!
	title:                        String # extension
	description:                  String # optional ?
	calls:                        [ProposalCall!]! @derivedFrom(field: "proposal")
	receipts:                     [Receipt!]! @derivedFrom(field: "proposal")
	proposalcreated:              [ProposalCreated!]! @derivedFrom(field: "proposal")
	proposalqueued:               [ProposalQueued!]! @derivedFrom(field: "proposal")
	proposalexecuted:             [ProposalExecuted!]! @derivedFrom(field: "proposal")
	proposalcanceled:             [ProposalCanceled!]! @derivedFrom(field: "proposal")
	votecast:                     [VoteCast!]! @derivedFrom(field: "proposal")
}

type ProposalCall @entity {
	id:                           ID!
	proposal:                     Proposal!
	index:                        Int!
	target:                       Account!
	value:                        BigInt
	signature:                    String
	calldata:                     Bytes
}

enum Support {
	AGAINST
	FOR
	ABSTAIN
}

type Receipt @entity {
	id:                           ID!
	proposal:                     Proposal!
	voter:                        Account!
	support:                      Support!
	votes:                        DecimalValue!
}

type ProposalCreated implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governor:                     Governor!
	proposal:                     Proposal!
	proposer:                     Account!
}

type ProposalQueued implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governor:                     Governor!
	proposal:                     Proposal!
	eta:                          BigInt!
}

type ProposalExecuted implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governor:                     Governor!
	proposal:                     Proposal!
}

type ProposalCanceled implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governor:                     Governor!
	proposal:                     Proposal!
}

type VoteCast implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governor:                     Governor!
	proposal:                     Proposal!
	receipt:                      Receipt!
	voter:                        Account!
}

type NewAdmin implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governor:                     Governor!
	oldAdmin:                     Account!
	newAdmin:                     Account!
}

type NewPendingAdmin implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governor:                     Governor!
	oldPendingAdmin:              Account!
	newPendingAdmin:              Account!
}

type NewImplementation implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governor:                     Governor!
	oldImplementation:            Account!
	newImplementation:            Account!
}

type ProposalThresholdSet implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governor:                     Governor!
	oldProposalThreshold:         BigInt!
	newProposalThreshold:         BigInt!
}

type VotingDelaySet implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governor:                     Governor!
	oldVotingDelay:               BigInt!
	newVotingDelay:               BigInt!
}

type VotingPeriodSet implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	governor:                     Governor!
	oldVotingPeriod:              BigInt!
	newVotingPeriod:              BigInt!
}

###############################################################################
#                                ERC20 + Comp                                 #
###############################################################################
type Token @entity {
	id:                           ID!
	name:                         String
	symbol:                       String
	decimals:                     Int!
	balances:                     [Balance!]! @derivedFrom(field: "token")
	votes:                        [Votes!]! @derivedFrom(field: "token")
	delegations:                  [Delegation!]! @derivedFrom(field: "token")
	transfers:                    [Transfer!]! @derivedFrom(field: "token")
	approvals:                    [Approval!]! @derivedFrom(field: "token")
}

type Balance @entity {
	id:                           ID!
	token:                        Token!
	account:                      Account!
	value:                        DecimalValue!
	transfersFrom:                [Transfer!]! @derivedFrom(field: "fromBalance")
	transfersTo:                  [Transfer!]! @derivedFrom(field: "toBalance")
}

type Votes @entity {
	id:                           ID!
	token:                        Token!
	account:                      Account!
	value:                        DecimalValue!
}

type Delegation @entity {
	id:                           ID!
	token:                        Token!
	delegator:                    Account!
	delegate:                     Account!
}

type Transfer implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	token:                        Token!
	from:                         Account!
	fromBalance:                  Balance
	to:                           Account!
	toBalance:                    Balance
	value:                        BigDecimal!
}

type Approval implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	token:                        Token!
	owner:                        Account!
	spender:                      Account!
	value:                        BigDecimal!
}

type DelegateChanged implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	token:                        Token!
	delegator:                    Account!
	fromDelegate:                 Account!
	toDelegate:                   Account!
}

type DelegateVotesChanged implements Event @entity {
	id:                           ID!
	transaction:                  Transaction!
	timestamp:                    BigInt!
	token:                        Token!
	delegate:                     Account!
	balance:                      DecimalValue!
}
